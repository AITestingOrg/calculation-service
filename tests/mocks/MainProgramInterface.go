// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import (
	"github.com/AITestingOrg/calculation-service/interfaces"
	"github.com/stretchr/testify/mock"
)

// MainProgramInterface is an autogenerated mock type for the MainProgramInterface type
type MainProgramInterface struct {
	mock.Mock
}

// BuildConsumer provides a mock function with given fields: publisher
func (_m *MainProgramInterface) BuildConsumer(publisher *interfaces.PublisherInterface) interfaces.ConsumerInterface {
	ret := _m.Called(publisher)

	var r0 interfaces.ConsumerInterface
	if rf, ok := ret.Get(0).(func(*interfaces.PublisherInterface) interfaces.ConsumerInterface); ok {
		r0 = rf(publisher)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.ConsumerInterface)
		}
	}

	return r0
}

// BuildController provides a mock function with given fields: publisher
func (_m *MainProgramInterface) BuildController(publisher *interfaces.PublisherInterface) interfaces.ControllerInterface {
	ret := _m.Called(publisher)

	var r0 interfaces.ControllerInterface
	if rf, ok := ret.Get(0).(func(*interfaces.PublisherInterface) interfaces.ControllerInterface); ok {
		r0 = rf(publisher)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.ControllerInterface)
		}
	}

	return r0
}

// BuildPublisher provides a mock function with given fields:
func (_m *MainProgramInterface) BuildPublisher() interfaces.PublisherInterface {
	ret := _m.Called()

	var r0 interfaces.PublisherInterface
	if rf, ok := ret.Get(0).(func() interfaces.PublisherInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.PublisherInterface)
		}
	}

	return r0
}

// Run provides a mock function with given fields: publisher, controller, consumer
func (_m *MainProgramInterface) Run(publisher interfaces.PublisherInterface, controller interfaces.ControllerInterface, consumer interfaces.ConsumerInterface) {
	_m.Called(publisher, controller, consumer)
}
